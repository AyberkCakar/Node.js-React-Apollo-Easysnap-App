scalar Date

type Query{
    user(id: ID!): User!
    users: [User!]!

    activeUser: User
}

type User{
    id: ID!
    username: String!
    createdAt: Date
    snaps: [Snap!]!
}

type Mutation{
    createUser(data: CreateUserInput!): Token
    singIn(data: singinUserInput!): Token
}

input CreateUserInput{
    username: String!
    password: String!
}

input singinUserInput{
    username: String!
    password: String!
}

type Subscription {
    user: User!
}